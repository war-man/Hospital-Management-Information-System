@model LabsDataAccess.StandardOperative_Procedures

@{
    ViewBag.Title = "Standard Operative Procedure";
    ViewBag.ShowTopMenu = true;
    Layout = "~/Areas/Radiology/Views/Shared/_LayoutRadiology.cshtml";
}

<div class="col-xs-offset-3 col-xs-6 CustomLabel">
    <div class="panel panel-primary caresoft-panel">

        <div class="panel-heading">
            @ViewBag.Title
        </div>
        <div class="panel-body">
            @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

            <div class="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Department", htmlAttributes: new { @class = "col-xs-2" })
                    <div class="col-xs-9">
                        <select name="Department" style="width:60%;" id="Department" class="text-box">
                            @foreach (LabsDataAccess.Department m in ViewBag.Departments)
                {
                    <option value="@m.Id">@m.Department1</option>
}
                        </select>
                        @Html.ValidationMessageFor(model => model.Test, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Test, htmlAttributes: new { @class = "col-xs-2" })
                    <div class="col-xs-9">
                        @Html.Editor("Test Name", new { htmlAttributes = new { @class = "text-box", style = "width:60%; margin-top:5px;margin-bottom:5px;", @required=true, id = "TestName" } })
                        @Html.ValidationMessageFor(model => model.Test, "", new { @class = "text-danger" })
                    </div>
                </div>
                <input  class="col-xs-offset-3" id="Test" type="number" required="required" value="0" />

                <div class="form-group ">
                    <div class="col-xs-12">
                        @Html.TextAreaFor(model => model.Standard_Operative_Procedure, new { @class = "text-box ckeditor", style = "width: 100%", id = "Data" })
                        @Html.ValidationMessageFor(model => model.Standard_Operative_Procedure, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group"></div>

                <div class="form-group">
                    <div class="col-xs-12 text-center" style="margin:5px;">
                        <input type="submit" value="Save" class="btn btn-sm btn-primary" />
                        <input type="reset" value="Clear" class="btn btn-sm btn-primary" />
                    </div>
                </div>
            </div>
}

        </div>
    </div>
</div>
         
@section scripts {

<script>

$("#TestName").autocomplete({
    source: function (req, res) {
        $.ajax({
        type: "GET",
            url: "searchSOPTests?id=" + $("#Department").val() + "&search=" + $("#TestName").val(),
        dataType: "json",
        data: { search: $("#PatientName").val() },

        success: function (data) {
            res($.map(data, function (item) {
                return { label: item.Test, value: item.Test, Id: item.id };
            }));
        },

            error: function (xmlhttprequest, textstatus, errorthrown) {
                console.log(errorthrown, "danger")
                console.log(xmlhttprequest.responseText);
            }
        });
    }
});


    $("#TestName").on("autocompleteselect", function (event, ui) {
        $('#Test').val(ui.item.Id);

        $.get("getSOP?id=" + ui.item.Id, function (data, status) {

            if (status == 'success') {
                CKEDITOR.instances.Standard_Operative_Procedure.setData("", function () {
                    this.checkDirty();  // true
                });
                CKEDITOR.instances.Standard_Operative_Procedure.setData(data.Standard_Operative_Procedure, function () {
                    this.checkDirty();  // true
                });
            } else {

            }
        });

    });


CKEDITOR.on("Standard_Operative_Procedure2", function (event) {
event.editor.on("change", function () {
alert(2);
$("#Standard_Operative_Procedure").html(event.editor.getData());
});
});
        //$('#autocomplete').autocomplete({
        //    lookup: countries,
        //    onSelect: function (suggestion) {
        //        alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
        //    }
        //});

</script>

}
