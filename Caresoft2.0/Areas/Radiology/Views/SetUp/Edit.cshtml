


@model Caresoft2._0.Areas.Radiology.Models.RadiologyAddNewUserData

@{
    ViewBag.Title = "Edit Lab User";
    ViewBag.ShowTopMenu = true;
    Layout = "~/Areas/Radiology/Views/Shared/_LayoutRadiology.cshtml";

    var users =
  Model.Employees
    .Select(e => new
    {
        Id = e.Id,
        Name = string.Format("{0} {1}", e.FName, e.OtherName)
    })
    .ToList();

}

<div class="col-xs-offset-3 col-xs-6 CustomLabel">
    <div class="panel panel-primary caresoft-panel">

        <div class="panel-heading">
            @ViewBag.Title
        </div>
        <div class="panel-body">

            <div class="cust_border_dark " style="text-align:left; margin-bottom:10px">
                <strong id="alert" class="pos-demo"> Please attend to the following:	</strong>
            </div>
            @using (Html.BeginForm("AssignNewDepartment", "SetUp", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "AssignDept" }))
            {
                @Html.AntiForgeryToken()

                <div id="loading"></div>
                <div class="form-horizontal" id="formdata">

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentAssignment.UserType, htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-9">
                            <span style="color:red">*</span>
                            @Html.DropDownList("UserType", new SelectList(Model.UserType, "Id", "UserType1"), new { @class = "text-box box-lg" })
                            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-9">
                            <span style="color:#DFEDFD">*</span>

                            @Html.DropDownListFor(model => model.Department, new SelectList(Model.Department, "Id", "DepartmentName"), new { @disabled = "disabled", @class = "text-box box-lg" })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Employee", htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-9">
                            <span style="color:red">*</span>
                            @Html.DropDownList("User", new SelectList(users, "Id", "Name"), new { @class = "text-box box-lg", @required = true })
                            @Html.ValidationMessageFor(model => model.DepartmentAssignment.User, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group hidden">
                        @Html.Label("UserName", htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-9">
                            <span style="color:#DFEDFD">*</span>
                            @Html.Editor("UserName", new { @class = "text-box box-lg" })
                            @Html.ValidationMessageFor(model => model.DepartmentAssignment.User, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-check">
                        <input type="checkbox" checked class="form-check-input" id="select-all-main-department">
                        Select All Main Department
                    </div>
                    <br>
                    <div class="form-group">
                        @Html.Label("Main Department", htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-8">
                            <div class="" style="background:white; width:100%; height:30vh; overflow:auto">


                                <div class="list-group main-departments">
                                    @foreach (var dep in Model.MainDepartments)
                                    {
                                        <a href="#" class="list-group-item list-group-item-action">
                                            <div class="form-check">
                                                @{ var checked_ = "";}

                                                @if (Model.UserDepartmentAssignment.User_Department.FirstOrDefault(e => e.Department == dep.Id) != null)
                                                {
                                                    <input type="checkbox" class="form-check-input main-department" checked value="@dep.Id">
                                                }
                                                else
                                                {
                                                    <script>
                                                        $('#select-all-main-department').prop('checked', false);
                                                    </script>
                                                    <input type="checkbox" class="form-check-input main-department" value="@dep.Id">
                                                }

                                                @dep.Department1
                                            </div>
                                        </a>


                                    }

                                </div>




                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentAssignment.SingatureImage, htmlAttributes: new { @class = "col-xs-3" })
                        <div class="col-xs-9">

                            <input name="SingatureImage" class="btn btn-sm btn-primary" type="file" id="SingatureImage" />
                            <img id="SignaturePreview" style="height:100px; width:auto" src="~/Areas/Radiology/Images/Signatures/@Model.UserDepartmentAssignment.SingatureImage" />
                        </div>
                    </div>


                    <div class="img-block"></div>

                    <div class="form-group">
                        <div class="col-xs-offset-3 col-xs-9">
                            <input id="sendData" type="submit" value="Save" class="btn btn-primary btn-sm" />
                            @Html.ActionLink("Cancel", "Edit", null, new { @class = "btn btn-primary btn-sm" })
                            @Html.ActionLink("Back", "EditUser", null, new { @class = "btn btn-primary btn-sm" })
                        </div>
                    </div>
                </div>
            }



        </div>
    </div>
</div>

@section scripts{
    <script>

        //Image Preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#SignaturePreview').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#SingatureImage").change(function () {
            readURL(this);
        });


        $(function () {
            $('#select-all-main-department').click(function () {
                if ($(this).is(':checked')) {
                    $('.main-department').prop('checked', true);
                } else {
                    $('.main-department').prop('checked', false);

                }
            });
        });

        $('form').submit(function (evt) {
            evt.preventDefault();

            var formData = new FormData(this);
            var MainDeps = "";


            $('.main-departments input[type=checkbox]').each(function () {
                if ($(this).is(":checked")) {
                    MainDeps += $(this).val() + ",";

                }
            });

            formData.append("Departments", MainDeps.slice(0, -1));

            if (formData.get('Employee') == 0) {
                $('#alert').addClass('text-danger').text("Please fill the mandatory fields");
                return;
            }

            $('.loader').show();
            $.ajax({
                type: 'POST',
                url: "../AssignNewDepartment/",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (res) {
                    $('.loader').fadeOut();

                    if (res == 1) {
                        $('#AssignDept')[0].reset();

                        var username = $("#User option:selected").text();
                        showNotification(username + ' has successully been assigned', 'info', 'true');
                        //$("[name=User] option[value='" + $('#User').val() + "']").remove();
                    } else {
                        showNotification('An Error Occured. Contact the Administrator', 'danger', 'true');
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $('.loader').fadeOut();
                    showNotification('An Error Occured. Contact the Administrator', 'danger', 'true');

                }
            });
        });
    </script>
}