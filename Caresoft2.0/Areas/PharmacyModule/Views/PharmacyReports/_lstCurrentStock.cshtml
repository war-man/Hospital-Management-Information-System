@using PagedList.Mvc;

@model PagedList.IPagedList<Caresoft2._0.Areas.Procurement.Models.ItemMaster>


<table class="table table-data-pathology table-condensed" style="background-color:white">
    <tr>
        <th>Batch No</th>
        <th>Status</th>
        <th>Item Name</th>
        <th>Current Stock</th>
        <th>Expiry Date</th>
        <th>Re-Order Level</th>
        <th>Cost Price</th>


    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="6">No data to display</td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {

            <tr>
                <td>@item.BatchNo</td>
                <td>
                    @if (item.Drug?.IsActive??true)
                    {
                        <span>Active</span>
                    }
                    else
                    {
                        <b class="text-danger">Inactive</b>
                    }
                </td>
                <td style="word-wrap:break-word">@item.ItemName</td>
                <td>@item.CurrentStock</td>
                <td>@item.ExpiryDate</td>
                <td>@item.ReorderLevel</td>
                <td>@item.SellingPriceUnit</td>

            </tr>
        }
    }

</table>

<div class="col-md-7 col-md-offset-1">
    <div class="col-md-12">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount
    </div>
    <div class="col-md-12">
        @Html.PagedListPager(Model, page => Url.Action("CurrentStock", "PharmacyReports", new { page, Area = "PharmacyModule", ItemId = @ViewBag.ItemId, CurrentStockFilter = ViewBag.CurrentStockFilter, IsDonor = ViewBag.IsDonor }), PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>

</div>
